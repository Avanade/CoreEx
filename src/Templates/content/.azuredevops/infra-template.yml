parameters:
- name: AzureSubscription
  type: string
- name: env
  type: string
  displayName: 'Environment shorthand - dev, test, etc.'
- name: ado_environment
  type: string
  displayName: 'Name of ADO environment to deploy to'
- name: AppSrvName
  type: string
  displayName: 'Name of azure app service to deploy to'
                      

jobs:
- deployment: Deploy
  displayName: "Deploy ${{ parameters.env }}"
  environment: ${{ parameters.ado_environment }}
  variables:
  - name: global_buildDate
    value: $[format('{0:yyyy}-{0:MM}-{0:dd}T{0:HH}:{0:mm}:{0:ss}', pipeline.startTime)] 
  - group: VG-D365-${{ parameters.env }}      
  pool: 
    vmImage: $(vmImageName)
  strategy:
    runOnce:
      deploy:
        steps:
        - task: Bash@3
          displayName: 'Install Pulumi'
          inputs:
            targetType: 'inline'
            script: |
              curl -fsSL https://get.pulumi.com | sh
              # export PATH="${PATH}:/root/.pulumi/bin"
              echo '##vso[task.prependpath]/root/.pulumi/bin'
        - task: AzureWebApp@1
          displayName: 'Deployment app ${{ parameters.AppSrvName }} to env: ${{ parameters.env }}'
          inputs:
            azureSubscription: '${{ parameters.AzureSubscription }}'
            appType: 'webApp'
            appName: '${{ parameters.AppSrvName }}'
            deploymentMethod: zipDeploy
            package: '$(Pipeline.Workspace)/**/Nte.Int.D365.Employee.ScimApp.zip'
            appSettings: '-Deployment.By "$(Build.RequestedForEmail)" 
                          -Deployment.Build "$(resources.pipeline.D365-Employee.runName)" 
                          -Deployment.Name "$(Build.BuildNumber)"
                          -Deployment.Version "$(resources.pipeline.D365-Employee.sourceBranch)-$(resources.pipeline.D365-Employee.sourceCommit)" 
                          -Deployment.Date "$(global_buildDate)"
                          -AppConfigConnectionString "$(AppConfigConnectionString)"
                          -ApplicationName "D365-Employee"'
 
        - task: AzureCLI@2
          displayName: Tag Azure
          inputs:
            azureSubscription: '${{ parameters.AzureSubscription }}'
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
                $fun_id=$(az resource show --name ${{ parameters.AppSrvName }} -g $(ResourceGroupName) --resource-type "Microsoft.Web/sites" --query id --output tsv)
                az tag update --resource-id $fun_id --operation merge --tags 'Deployment.By="$(Build.RequestedForEmail)"' 'Deployment.Name="$(Build.BuildNumber)"' 'Deployment.Build="$(resources.pipeline.D365-Employee.runName)"' 'Deployment.Version="$(resources.pipeline.D365-Employee.sourceBranch)-$(resources.pipeline.D365-Employee.sourceCommit)"' 'Deployment.Date="$(global_buildDate)"'                      
