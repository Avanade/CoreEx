parameters:
- name: AzureSubscription
  type: string
- name: env
  type: string
  displayName: 'Environment shorthand - dev, test, etc.'
- name: ado_environment
  type: string
  displayName: 'Name of ADO environment to deploy to'
- name: FunctionAppName
  type: string
  displayName: 'Name of azure function to deploy to'
- name: MovementJournalQueueName
  type: string
  displayName: 'Movement Journal Queue Name'
- name: GoogleInventoryFullFeedTimer
  type: string
  displayName: 'Google Inventory Full Feed Timer'
# - name: PricingSubscriberQueueName
#   type: string
#   displayName: 'Pricing Subscriber Queue Name'
# - name: AppsQueueName
#   type: string
#   displayName: 'Name of ADO environment to deploy to'

jobs:
- deployment: Deploy
  displayName: "Deploy ${{ parameters.env }}"
  environment: ${{ parameters.ado_environment }}
  variables:
  - name: global_buildDate
    value: $[format('{0:yyyy}-{0:MM}-{0:dd}T{0:HH}:{0:mm}:{0:ss}', pipeline.startTime)]
  - group: VG-D365-${{ parameters.env }}
  pool: 
    vmImage: $(vmImageName)
  strategy:
    runOnce:
      deploy:
        steps:
        
        - task: AzureFunctionApp@1
          displayName: 'Deployment az fun ${{ parameters.FunctionAppName }} to env: ${{ parameters.env }}'
          inputs:
              azureSubscription: '${{ parameters.AzureSubscription }}'
              appType: 'functionApp'
              appName: '${{ parameters.FunctionAppName }}'
               #  deployToSlotOrASE: true
              resourceGroupName: '$(ResourceGroupName)'
              #slotName: '$(DeploymentSlot)'
              package: '$(Pipeline.Workspace)/D365-Apps/D365-Apps_Package/Nte.Int.D365.Apps.FunctionApps.zip'
              deploymentMethod: 'auto'
              appSettings: '-Deployment.By "$(Build.RequestedForEmail)" 
                            -Deployment.Build "$(resources.pipeline.D365-Apps.runName)" 
                            -Deployment.Name "$(Build.BuildNumber)"
                            -Deployment.Version "$(resources.pipeline.D365-Apps.sourceBranch)-$(resources.pipeline.D365-Apps.sourceCommit)" 
                            -Deployment.Date "$(global_buildDate)"
                            
                            -ApplicationName "D365-Apps"
                            -MovementJournalQueueName "${{parameters.MovementJournalQueueName}}"
                            -GoogleInventoryFullFeedTimer "${{parameters.GoogleInventoryFullFeedTimer}}"
                            -AppConfigConnectionString "$(AppConfigConnectionString)"
                            -ServiceBusConnection__fullyQualifiedNamespace "$(ServiceBusConnection__fullyQualifiedNamespace)"
                            -Publisher_ServiceBusConnection "$(ServiceBusConnection__fullyQualifiedNamespace)"
                            -AzureFunctionsJobHost__logging__logLevel__default "Warning"
                            -AzureFunctionsJobHost__logging__logLevel__Nte__Int__D365__Common "Information"'

        - task: AzureCLI@2
          displayName: Tag Azure
          inputs:
            azureSubscription: '${{ parameters.AzureSubscription }}'
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
                $fun_id=$(az resource show --name ${{ parameters.FunctionAppName }} -g $(ResourceGroupName) --resource-type "Microsoft.Web/sites" --query id --output tsv)
                az tag update --resource-id $fun_id --operation merge --tags 'Deployment.By="$(Build.RequestedForEmail)"' 'Deployment.Name="$(Build.BuildNumber)"' 'Deployment.Build="$(resources.pipeline.D365-Apps.runName)"' 'Deployment.Version="$(resources.pipeline.D365-Apps.sourceBranch)-$(resources.pipeline.D365-Apps.sourceCommit)"' 'Deployment.Date="$(global_buildDate)"'                      
                
