name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'

trigger: 
  branches:
    include:
    - develop
    - main
    - test
    - preprod

steps:
- task: CopyFiles@2
  displayName: Copy Files
  inputs:
    contents: $(Build.Repository.LocalPath)/**
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: NuGetAuthenticate@0

- task: NuGetToolInstaller@1
  displayName: 'NuGet tool installer'

- task: Cache@2
  continueOnError: true
  displayName: 'NuGet Cache'
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
    path: ''
    cacheHitVar: 'CACHE_RESTORED'

- task: DotNetCoreCLI@2
  displayName: Restore
  condition: ne(variables.CACHE_RESTORED, true)
  inputs:
    command: 'restore'
    projects: '**/source/*.sln'
    feedsToUse: 'select'
    vstsFeed: '5c1bf9a9-e22e-4f76-9993-1a6b447130f8/c1502c9b-c232-4f35-8045-b01575cce6bc'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/source/*.sln'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Install .NET tools from local manifest'
  inputs:
    command: custom
    custom: tool
    arguments: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests - $(buildConfiguration)'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    publishTestResults: true
    projects: '**/*.UnitTests.csproj'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/source/Nte.Int.D365.Employee.ScimApp/Nte.Int.D365.Employee.ScimApp.csproj'
    publishWebProjects: false
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/Nte.Int.D365.Employee.ScimApp.zip'
    artifactName: D365-Employee-$(Build.BuildId)

